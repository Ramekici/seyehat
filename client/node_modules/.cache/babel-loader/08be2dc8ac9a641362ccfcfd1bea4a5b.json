{"ast":null,"code":"var _jsxFileName = \"/Users/ramazanekici/new-app/client/src/components/admin/veriler/VerilerCreate.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVerilerToDatabase, stateUpdateEl, stateVeri, stateCompleted, updateVeriler, stateMessage, setMessage, stateErrors, stateUpdateId } from '../../../features/veriler/verilerSlice';\nimport { getKategoriler, stateKategoriler } from '../../../features/veriler/kategorilerSlice';\nimport '../../components/date/SelectedDate.css';\nimport Selector from '../inputUI/Selector';\nimport Tarih from '../inputUI/Tarih';\nimport InputText from '../inputUI/InputText';\nimport VerilerList from './VerilerList';\nimport Tooltip from './Tooltip';\nimport Heading from '../inputUI/Heading';\nimport Button from '../inputUI/Button';\n\nconst VerilerCreate = () => {\n  const dispatch = useDispatch();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const updateEl = useSelector(stateUpdateEl);\n  const updateId = useSelector(stateUpdateId);\n  const errorsDatabase = useSelector(stateErrors);\n  const completed = useSelector(stateCompleted);\n  const message = useSelector(stateMessage);\n  const data = useSelector(stateVeri);\n  const [veri, setVeri] = useState({\n    name: '',\n    surName: '',\n    mission: '',\n    category: ''\n  });\n  const {\n    name,\n    surName,\n    mission,\n    category\n  } = veri;\n\n  const onHandleVeri = name => event => {\n    setVeri({ ...veri,\n      [name]: event.target.value\n    });\n  }; ///// Kategori Part\n\n\n  useEffect(() => {\n    dispatch(getKategoriler());\n  }, [dispatch]);\n  const kategoriDatas = useSelector(stateKategoriler);\n  let kategorilerim = [];\n  const [missionEls, setMissionEls] = useState([]);\n  kategoriDatas.map(item => kategorilerim.push(item.category));\n  useEffect(() => {\n    if (category !== '') {\n      const el = kategoriDatas.find(item => item.category === category);\n\n      if (el) {//setMissionEls(el.missions)   \n      }\n    }\n  }, [category]); /////// Error Part\n\n  const [errors, setErrors] = useState({\n    nam: '',\n    surNam: '',\n    categor: '',\n    missio: ''\n  });\n  const {\n    nam,\n    surNam,\n    categor,\n    missio\n  } = errors;\n  useEffect(() => {\n    setErrors({ ...errorsDatabase\n    });\n  }, [errorsDatabase]); ///// update part\n\n  useEffect(() => {\n    if (updateId !== '') {\n      setVeri({\n        name: updateEl.name,\n        surName: updateEl.surName,\n        category: updateEl.category,\n        mission: updateEl.mission\n      });\n      setStartDate(new Date(updateEl.start));\n      setEndDate(new Date(updateEl.end));\n    }\n  }, [updateEl]);\n  useEffect(() => {\n    if (completed) {\n      setVeri({\n        name: '',\n        surName: '',\n        category: '',\n        mission: ''\n      });\n      setStartDate(new Date());\n      setEndDate(new Date());\n    }\n  }, [completed]); /// submit part \n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    let payload = {\n      _id: '',\n      user: '',\n      category,\n      mission,\n      name,\n      surName,\n      start: startDate.toISOString().split('T')[0],\n      end: endDate.toISOString().split('T')[0]\n    };\n\n    if (updateEl) {\n      payload = {\n        _id: updateEl._id,\n        user: updateEl.user,\n        category,\n        mission,\n        name,\n        surName,\n        start: startDate.toISOString().split('T')[0],\n        end: endDate.toISOString().split('T')[0]\n      };\n      dispatch(updateVeriler(updateEl._id, payload, category, mission));\n    } else {\n      dispatch(setVerilerToDatabase(payload));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      marginLeft: \"-10px\",\n      marginRight: \"-10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    message: message,\n    onDeleteMessage: () => dispatch(setMessage()),\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"pb-2\",\n    style: {\n      borderBottom: \"2px solid darkgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    text: \"Yeni Veri Giri\\u015Fi/G\\xFCncelleme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Kategori\",\n    items: kategorilerim,\n    item: category,\n    onHandleVeri: onHandleVeri(\"category\"),\n    error: categor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"G\\xF6revler\",\n    items: missionEls,\n    item: mission,\n    onHandleVeri: onHandleVeri(\"mission\"),\n    error: missio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-lg-6 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    col: \"col\",\n    id: \"ad\",\n    onChangeHandler: onHandleVeri(\"name\"),\n    val: name,\n    label: \"Ad\",\n    type: \"text\",\n    error: nam,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-lg-6 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    col: \"col\",\n    id: \"soyad\",\n    onChangeHandler: onHandleVeri(\"surName\"),\n    val: surName,\n    label: \"Soyad\",\n    type: \"text\",\n    error: surNam,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Tarih, {\n    startDate: startDate,\n    endDate: endDate,\n    onChangeHandlerStart: date => setStartDate(date),\n    onChangeHandlerEnd: date => setEndDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: updateEl._id !== '' ? 'GÃ¼ncelle' : 'Kaydet',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(VerilerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default VerilerCreate;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/components/admin/veriler/VerilerCreate.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","setVerilerToDatabase","stateUpdateEl","stateVeri","stateCompleted","updateVeriler","stateMessage","setMessage","stateErrors","stateUpdateId","getKategoriler","stateKategoriler","Selector","Tarih","InputText","VerilerList","Tooltip","Heading","Button","VerilerCreate","dispatch","startDate","setStartDate","Date","endDate","setEndDate","updateEl","updateId","errorsDatabase","completed","message","data","veri","setVeri","name","surName","mission","category","onHandleVeri","event","target","value","kategoriDatas","kategorilerim","missionEls","setMissionEls","map","item","push","el","find","errors","setErrors","nam","surNam","categor","missio","start","end","onSubmitHandler","e","preventDefault","payload","_id","user","toISOString","split","marginLeft","marginRight","borderBottom","date"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVerilerToDatabase, stateUpdateEl, stateVeri,stateCompleted,\n    updateVeriler, stateMessage, setMessage, stateErrors, stateUpdateId } \n    from '../../../features/veriler/verilerSlice';\n\n\nimport { getKategoriler, stateKategoriler } from '../../../features/veriler/kategorilerSlice';\n\nimport '../../components/date/SelectedDate.css';\nimport Selector from '../inputUI/Selector';\nimport Tarih from '../inputUI/Tarih';\nimport InputText from '../inputUI/InputText';\nimport VerilerList from './VerilerList';\nimport Tooltip from './Tooltip';\nimport Heading from '../inputUI/Heading';\nimport Button from '../inputUI/Button';\n\nconst VerilerCreate = () => {\n\n    const dispatch = useDispatch();\n    \n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n\n    const updateEl = useSelector(stateUpdateEl);\n    const updateId = useSelector(stateUpdateId);\n    const errorsDatabase = useSelector(stateErrors);\n    const completed = useSelector(stateCompleted);\n    const message = useSelector(stateMessage);\n    const data = useSelector(stateVeri);\n\n\n    \n\n    const [veri, setVeri] = useState({name:'', surName:'', mission:'', category:''})\n    const {name, surName, mission, category} = veri;\n\n    const onHandleVeri = (name:string) => (event:any) => {\n        setVeri({...veri, [name]: event.target.value})\n    }\n\n    ///// Kategori Part\n    useEffect(() => {\n        dispatch(getKategoriler());\n    }, [dispatch]);\n\n    const kategoriDatas = useSelector(stateKategoriler);\n    let kategorilerim:Array<string> = [];\n    const [missionEls, setMissionEls] = useState<Array<string>>([]);\n    \n    kategoriDatas.map(item => kategorilerim.push(item.category));\n\n    useEffect(()=> {\n        if(category !== '') {\n            const el = kategoriDatas.find(item => item.category === category);\n            if(el){\n               //setMissionEls(el.missions)   \n            }\n        } \n    }, [category])\n\n    /////// Error Part\n\n    const [errors, setErrors] = useState({nam:'', surNam:'', categor:'', missio:''});\n    const {nam, surNam, categor, missio} = errors;\n\n    useEffect(() => {\n        setErrors({...errorsDatabase});\n    },[errorsDatabase])\n\n    ///// update part\n\n\n    useEffect(() => {\n        if (updateId !== '') {\n            setVeri({name: updateEl.name, surName: updateEl.surName, \n                category: updateEl.category, mission: updateEl.mission});\n            setStartDate(new Date(updateEl.start));\n            setEndDate(new Date(updateEl.end))\n        }\n    }, [updateEl])\n\n    useEffect(() => {\n        if(completed) {\n           setVeri({name: '', surName: '', category: '', mission: ''});\n            setStartDate(new Date());\n            setEndDate(new Date()) \n        }\n        \n    },[completed])\n\n    \n    /// submit part \n\n    const onSubmitHandler = (e:any) => {\n        e.preventDefault();\n        let payload = { _id: '', user: '', category, mission, name, surName, \n            start: startDate.toISOString().split('T')[0], \n            end: endDate.toISOString().split('T')[0] }\n        if(updateEl) {\n            payload = {\n                _id: updateEl._id, user:updateEl.user ,category, mission, name, surName, \n                start: startDate.toISOString().split('T')[0], \n                end: endDate.toISOString().split('T')[0]\n            }\n            dispatch(updateVeriler(updateEl._id, payload, category, mission))\n        } else {\n           dispatch(setVerilerToDatabase(payload)); \n        } \n    }\n\n\n    return (\n        <div className=\"container\" style={{marginLeft:\"-10px\", marginRight:\"-10px\"}}>\n            <Tooltip \n                message={message} \n                onDeleteMessage = {()=> dispatch(setMessage())}\n                data= {data}\n            />\n            <section className=\"pb-2\" style={{borderBottom:\"2px solid darkgray\"}}> \n                <Heading text=\"Yeni Veri GiriÅi/GÃ¼ncelleme\" />\n                <form onSubmit={onSubmitHandler}>\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-md-6\">\n                            <Selector\n                                title=\"Kategori\"\n                                items={kategorilerim} \n                                item={category}\n                                onHandleVeri={onHandleVeri(\"category\")}\n                                error={categor}/>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Selector\n                                title=\"GÃ¶revler\"\n                                items={missionEls} \n                                item={mission} \n                                onHandleVeri={onHandleVeri(\"mission\")}\n                                error={missio}/>\n                        </div>\n                    </div> \n                    <div className=\"row mt-3\">\n                            <div className=\"col-12 col-lg-6 px-0\">\n                                <InputText\n                                col=\"col\"\n                                id=\"ad\"\n                                onChangeHandler={onHandleVeri(\"name\")} \n                                val={name} \n                                label=\"Ad\"\n                                type=\"text\"\n                                error={nam}\n                                />\n                            </div>\n                            <div className=\"col-12 col-lg-6 px-0\">\n                                <InputText\n                                    col=\"col\"\n                                    id=\"soyad\"\n                                    onChangeHandler={onHandleVeri(\"surName\")} \n                                    val={surName} \n                                    label=\"Soyad\"\n                                    type=\"text\"\n                                    error={surNam}\n                                    />\n                            </div>\n                        </div>\n                        <Tarih \n                            startDate={startDate} \n                            endDate={endDate} \n                            onChangeHandlerStart={(date) => setStartDate(date)}\n                            onChangeHandlerEnd={(date) => setEndDate(date)}\n                        />\n                        <Button text = {updateEl._id !== '' ? 'GÃ¼ncelle': 'Kaydet'}/>\n                     \n                </form>\n            </section>\n            <VerilerList/>\n        </div>\n       \n        \n    )\n}\n\nexport default VerilerCreate;"]},"metadata":{},"sourceType":"module"}