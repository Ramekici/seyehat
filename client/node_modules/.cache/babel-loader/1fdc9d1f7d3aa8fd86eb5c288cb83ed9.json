{"ast":null,"code":"import React from'react';var InputText=function InputText(_ref){var col=_ref.col,id=_ref.id,onChangeHandler=_ref.onChangeHandler,val=_ref.val,label=_ref.label,type=_ref.type,metin=_ref.metin,error=_ref.error;return/*#__PURE__*/React.createElement(\"div\",{className:col},/*#__PURE__*/React.createElement(\"label\",{htmlFor:id},label),!metin?/*#__PURE__*/React.createElement(\"input\",{type:type,onChange:onChangeHandler,value:val,className:\"form-control\",placeholder:label,id:id}):/*#__PURE__*/React.createElement(\"textarea\",{rows:4,cols:50,onChange:onChangeHandler,value:val,className:\"form-control\",placeholder:label,id:id}),error?/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\",style:{display:\"block\"}},\" \",error,\" \"):null);};export default InputText;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/components/admin/inputUI/InputText.tsx"],"names":["React","InputText","col","id","onChangeHandler","val","label","type","metin","error","display"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAaA,GAAMC,CAAAA,SAA8B,CAChC,QADEA,CAAAA,SACF,MAAgE,IAA9DC,CAAAA,GAA8D,MAA9DA,GAA8D,CAAzDC,EAAyD,MAAzDA,EAAyD,CAArDC,eAAqD,MAArDA,eAAqD,CAApCC,GAAoC,MAApCA,GAAoC,CAA/BC,KAA+B,MAA/BA,KAA+B,CAAxBC,IAAwB,MAAxBA,IAAwB,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,KAAW,MAAXA,KAAW,CAChE,mBACI,2BAAK,SAAS,CAAEP,GAAhB,eACI,6BAAO,OAAO,CAAEC,EAAhB,EAAqBG,KAArB,CADJ,CAEK,CAACE,KAAD,cACD,6BACI,IAAI,CAAED,IADV,CAEI,QAAQ,CAAEH,eAFd,CAGI,KAAK,CAAEC,GAHX,CAII,SAAS,CAAC,cAJd,CAKI,WAAW,CAAEC,KALjB,CAMI,EAAE,CAAEH,EANR,EADC,cAQC,gCACE,IAAI,CAAE,CADR,CAEE,IAAI,CAAE,EAFR,CAGE,QAAQ,CAAEC,eAHZ,CAIE,KAAK,CAAEC,GAJT,CAKE,SAAS,CAAC,cALZ,CAME,WAAW,CAAEC,KANf,CAOE,EAAE,CAAEH,EAPN,EAVN,CAmBMM,KAAK,cAAG,2BAAK,SAAS,CAAC,kBAAf,CACV,KAAK,CAAE,CAACC,OAAO,CAAC,OAAT,CADG,MACkBD,KADlB,KAAH,CACqC,IApBhD,CADJ,CAyBH,CA3BD,CA4BA,cAAeR,CAAAA,SAAf","sourcesContent":["import React from 'react';\n\ninterface InputItems{\n    col:string;\n    id: string;\n    onChangeHandler(event:any): void;\n    val: string;\n    label: string;\n    type:string;\n    metin?:boolean;\n    error?:any\n}\n\nconst InputText:React.FC<InputItems> = \n    ({col, id, onChangeHandler, val, label, type, metin, error}) => {\n    return (\n        <div className={col}>\n            <label htmlFor={id}>{label}</label>\n            {!metin ? \n            <input \n                type={type}\n                onChange={onChangeHandler}\n                value={val}\n                className=\"form-control\" \n                placeholder={label}\n                id={id}/>\n            : <textarea\n                rows={4} \n                cols={50}\n                onChange={onChangeHandler}\n                value={val}\n                className=\"form-control\" \n                placeholder={label}\n                id={id}\n            />}\n            { error ? <div className=\"invalid-feedback\" \n            style={{display:\"block\"}}> {error} </div> : null}\n            \n        </div>\n    )\n}\nexport default InputText;"]},"metadata":{},"sourceType":"module"}