{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n;\nconst initialState = {\n  isCompleted: false,\n  isAuthenticated: false,\n  personelData: {\n    token: '',\n    userId: '',\n    email: '',\n    name: '',\n    lastName: '',\n    admin: false\n  },\n  authRedirectPath: '/',\n  message: '',\n  errorLogin: '',\n  errorRegister: '',\n  defaultValReg: {\n    name: '',\n    lastName: '',\n    email: '',\n    password: '',\n    rePassword: ''\n  },\n  defaultValLog: {\n    email: '',\n    password: ''\n  }\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    createUserStart: state => {\n      state.isCompleted = false;\n    },\n    createUserSuccess: (state, action) => {\n      state.message = action.payload;\n      state.errorRegister = '';\n      state.isCompleted = true;\n    },\n    messageReset: state => {\n      state.message = '';\n    },\n    loginUserSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.personelData = action.payload;\n      state.errorLogin = '';\n      state.isCompleted = true;\n    },\n    createUserRegisterFail: (state, action) => {\n      state.isCompleted = false;\n      state.errorRegister = action.payload;\n    },\n    createUserLoginFail: (state, action) => {\n      state.isCompleted = false;\n      state.errorLogin = action.payload;\n    },\n    setAuthRedirect: (state, action) => {\n      state.authRedirectPath = action.payload;\n    },\n    logoutUserState: state => {\n      state.isAuthenticated = false;\n      state.personelData = {\n        token: '',\n        userId: '',\n        email: '',\n        name: '',\n        lastName: '',\n        admin: false\n      };\n    }\n  }\n});\nexport const {\n  createUserStart,\n  createUserSuccess,\n  createUserLoginFail,\n  createUserRegisterFail,\n  loginUserSuccess,\n  logoutUserState,\n  setAuthRedirect,\n  messageReset\n} = authSlice.actions;\nexport const createUser = data => dispatch => {\n  dispatch(createUserStart());\n  axios.post('http://localhost:5000/api/users/register', data).then(res => {\n    dispatch(createUserSuccess(res.data.message));\n  }).catch(err => {\n    dispatch(createUserRegisterFail(err.response.data));\n  });\n};\nexport const updateUser = data => dispatch => {\n  const token = localStorage.getItem('token');\n  dispatch(createUserStart());\n  axios.post('http://localhost:5000/api/users/update', data, {\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(res => {\n    dispatch(createUserSuccess(res.data.message));\n    dispatch(messageReset());\n  }).catch(err => {\n    dispatch(createUserRegisterFail(err.response.data));\n  });\n};\nexport const loginUser = data => dispatch => {\n  dispatch(createUserStart());\n  axios.post('http://localhost:5000/api/users/login', data).then(response => {\n    const payload = {\n      token: response.data.token,\n      userId: response.data.userId,\n      email: response.data.email,\n      name: response.data.name,\n      lastName: response.data.lastName,\n      admin: response.data.admin\n    };\n    dispatch(loginUserSuccess(payload));\n\n    if (response.data.token) {\n      const expiresInDuration = response.data.expiresIn;\n      dispatch(setAuthTimer(expiresInDuration));\n      const now = new Date();\n      const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n      saveAuthData(response.data.token, expirationDate, response.data.userId);\n    }\n\n    ;\n  }).catch(err => {\n    dispatch(createUserLoginFail(err.response.data));\n  });\n};\nexport const logoutUser = () => dispatch => {\n  clearAuthData();\n  dispatch(logoutUserState());\n};\nexport const setAuthTimer = duration => dispatch => {\n  setTimeout(() => {\n    dispatch(logoutUser());\n  }, duration * 1000);\n};\nexport const saveAuthData = (token, expirationDate, userId) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('expiration', expirationDate.toISOString());\n  localStorage.setItem('userId', userId);\n};\nexport const clearAuthData = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expiration');\n  localStorage.removeItem('userId');\n};\nexport const getAuthData = () => {\n  const userId = localStorage.getItem('userId');\n  const token = localStorage.getItem('token');\n  const expirationDate = localStorage.getItem('expiration');\n\n  if (!token || !expirationDate) {\n    return;\n  }\n\n  return {\n    token,\n    expirationDate: new Date(expirationDate),\n    userId\n  };\n};\nexport const autoAuthUser = () => dispatch => {\n  const authInformation = getAuthData();\n\n  if (!authInformation) {\n    return;\n  }\n\n  const now = new Date();\n  const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n\n  if (expiresIn > 0) {\n    //dispatch(saveAuthData(authInformation.token, \n    //    authInformation.expirationDate, authInformation.userId));\n    dispatch(setAuthTimer(expiresIn / 1000));\n  }\n};\nexport const stateAuth = state => state.auth;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/features/auth/authSlice.ts"],"names":["createSlice","axios","initialState","isCompleted","isAuthenticated","personelData","token","userId","email","name","lastName","admin","authRedirectPath","message","errorLogin","errorRegister","defaultValReg","password","rePassword","defaultValLog","authSlice","reducers","createUserStart","state","createUserSuccess","action","payload","messageReset","loginUserSuccess","createUserRegisterFail","createUserLoginFail","setAuthRedirect","logoutUserState","actions","createUser","data","dispatch","post","then","res","catch","err","response","updateUser","localStorage","getItem","headers","loginUser","expiresInDuration","expiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveAuthData","logoutUser","clearAuthData","duration","setTimeout","setItem","toISOString","removeItem","getAuthData","autoAuthUser","authInformation","stateAuth","auth","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../app/store';\nimport axios from 'axios';\n\ninterface DefaultValReg{\n    name:string;\n    lastName:string, \n    email:string, \n    password:string, \n    rePassword: string\n}\n\ninterface DefaultValLog{\n    email:string, \n    password:string, \n}\ninterface PersonelData {\n    token: string, \n    userId: string,\n    email: string,\n    name: string,\n    lastName: string,\n    admin: boolean\n}\n\ninterface AuthState {\n    isCompleted:boolean;\n    isAuthenticated: boolean;\n    personelData: PersonelData;\n    authRedirectPath: string;\n    message: string;\n    errorLogin: string;\n    errorRegister: string;\n    defaultValReg: DefaultValReg,\n    defaultValLog: DefaultValLog\n};\n\n\n\nconst initialState: AuthState = {\n    isCompleted: false,\n    isAuthenticated: false,\n    personelData:{token: '', userId: '', email: '', name: '', lastName: '', admin: false},\n    authRedirectPath:'/',\n    message: '',\n    errorLogin: '',\n    errorRegister: '',\n    defaultValReg: {name:'', lastName:'', email:'', password:'', rePassword:''},\n    defaultValLog: {email:'', password:''}\n};\n\nexport const authSlice = createSlice({\n  name:'auth',\n  initialState,\n  reducers: {\n    createUserStart: (state) => {\n        state.isCompleted = false;\n    },\n    createUserSuccess: (state, action: PayloadAction<string>) => {\n        state.message= action.payload;\n        state.errorRegister = '';\n        state.isCompleted = true;\n    },\n    messageReset : (state) => {\n        state.message = '';\n    },\n    loginUserSuccess: (state, action: PayloadAction<PersonelData>) => {\n        state.isAuthenticated = true;\n        state.personelData = action.payload;\n        state.errorLogin = '';\n        state.isCompleted = true;\n    },\n    createUserRegisterFail: (state, action: PayloadAction<string>) => {\n        state.isCompleted = false;\n        state.errorRegister= action.payload;\n    },\n    createUserLoginFail: (state, action: PayloadAction<string>) => {\n        state.isCompleted = false;\n        state.errorLogin= action.payload;\n    },\n    setAuthRedirect: (state, action: PayloadAction<string>) =>{\n        state.authRedirectPath = action.payload;\n    },\n    logoutUserState: (state) => {\n        state.isAuthenticated = false;\n        state.personelData = {token: '', userId: '', email: '', name: '', lastName: '', admin: false};\n    }\n  },\n});\n\nexport const { createUserStart, createUserSuccess, createUserLoginFail, createUserRegisterFail,\n    loginUserSuccess, logoutUserState, setAuthRedirect, messageReset } = authSlice.actions;\n\nexport const createUser = (data: object): AppThunk  => dispatch => {\n    dispatch(createUserStart());\n    axios.post('http://localhost:5000/api/users/register', data)\n    .then(res => {\n            dispatch(createUserSuccess(res.data.message));\n    })\n    .catch(err => {\n            dispatch(createUserRegisterFail(err.response.data));\n    })\n};\n\nexport const updateUser = (data: object): AppThunk => dispatch => {\n    const token = localStorage.getItem('token');\n    dispatch(createUserStart());\n    axios.post('http://localhost:5000/api/users/update', \n        data, {headers: {'Authorization' : 'Bearer ' + token}})\n        .then(res => {\n            dispatch(createUserSuccess(res.data.message));\n            dispatch(messageReset());\n        })\n        .catch(err => {\n            dispatch(createUserRegisterFail(err.response.data));\n    })\n};\n\n\nexport const loginUser = (data: Object): AppThunk => dispatch => {\n    dispatch(createUserStart());\n    axios.post('http://localhost:5000/api/users/login', data)\n        .then(response => {\n            const payload = {\n                token: response.data.token, \n                userId: response.data.userId,\n                email: response.data.email,\n                name: response.data.name,\n                lastName: response.data.lastName,\n                admin: response.data.admin\n            }\n            dispatch(loginUserSuccess(payload));\n            if (response.data.token) {\n                const expiresInDuration = response.data.expiresIn;\n                dispatch(setAuthTimer(expiresInDuration));\n                const now = new Date();\n                const expirationDate = new Date(now.getTime() + expiresInDuration*1000);\n                saveAuthData(response.data.token, expirationDate, response.data.userId);\n            };             \n        })\n        .catch(err => {\n            dispatch(createUserLoginFail(err.response.data));\n        })\n};\n\nexport const logoutUser = (): AppThunk => dispatch => {\n    clearAuthData();\n    dispatch(logoutUserState());\n};\n\nexport const setAuthTimer = (duration:number): AppThunk => dispatch => {\n    setTimeout(() => {\n    dispatch(logoutUser());\n    }, duration*1000);\n}\n\nexport const saveAuthData = (token: string, expirationDate: Date, userId: string) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n}\n\nexport const clearAuthData = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n}\n\nexport const getAuthData = () => {\n    const userId = localStorage.getItem('userId');\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate),\n      userId\n    };\n}\n\nexport const autoAuthUser = () : AppThunk  => dispatch => {\n    const authInformation = getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n        //dispatch(saveAuthData(authInformation.token, \n        //    authInformation.expirationDate, authInformation.userId));\n        dispatch(setAuthTimer(expiresIn / 1000));\n    }\n  }\n\nexport const stateAuth = (state: RootState) => state.auth;\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}