{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  errors: {},\n  tarihteBugun: [],\n  ilgiliTarihteki: [],\n  tarihItem: {\n    id: '',\n    user: '',\n    title: '',\n    info: '',\n    date: new Date()\n  },\n  completed: false\n};\nexport const tarihSlice = createSlice({\n  name: 'tarih',\n  initialState,\n  reducers: {\n    setInitial: state => {\n      state.completed = false;\n      state.tarihItem = {\n        id: '',\n        user: '',\n        title: '',\n        info: '',\n        date: new Date()\n      };\n    },\n    setTarihteBugun: (state, action) => {\n      state.tarihteBugun = action.payload;\n      state.completed = true;\n    },\n    setIlgiliTarih: (state, action) => {\n      state.ilgiliTarihteki = action.payload;\n    },\n    setDataFailed: (state, action) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setTarihId: (state, action) => {\n      state.tarihItem = state.ilgiliTarihteki.find(item => item.id === action.payload);\n    }\n  }\n});\nexport const {\n  setDataFailed,\n  setTarihteBugun,\n  setIlgiliTarih,\n  setTarihId\n} = tarihSlice.actions;\nexport const getTarihteBugun = () => dispatch => {\n  axios.get(`http://localhost:5000/api/tarih/tarihte`).then(res => {\n    dispatch(setTarihteBugun(res.data));\n  }).catch(err => {\n    dispatch(setDataFailed(err));\n  });\n};\nexport const getTarihtekiBilgiler = date => dispatch => {\n  axios.get(`http://localhost:5000/api/tarih/tarihindeki?date=${date}`).then(res => {\n    dispatch(setIlgiliTarih(res.data));\n  }).catch(err => {\n    dispatch(setDataFailed(err));\n  });\n};\nexport const tarihBilgileriDelete = (id, date) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/tarih/tarihdelete/${id}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getTarihtekiBilgiler(date));\n  }).catch(err => {\n    dispatch(setDataFailed(err));\n  });\n};\nexport const tarihBilgileriUpdate = (id, data, date) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/tarih/tarihupdate/${id}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getTarihtekiBilgiler(date));\n  }).catch(err => {\n    dispatch(setDataFailed(err.response.data));\n  });\n};\nexport const setTarihteBugunToDatabase = data => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post('http://localhost:5000/api/tarih/tarihtebugun', data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getTarihteBugun());\n  }).catch(err => {\n    dispatch(setDataFailed(err.response.data));\n  });\n};\nexport const stateTarihte = state => state.tarih.tarihteBugun;\nexport const stateIlgiliTarih = state => state.tarih.ilgiliTarihteki;\nexport const stateTarihItem = state => state.tarih.tarihItem;\nexport const stateCompleted = state => state.tarih.completed;\nexport default tarihSlice.reducer;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/features/veriler/tarihSlice.ts"],"names":["createSlice","axios","initialState","errors","tarihteBugun","ilgiliTarihteki","tarihItem","id","user","title","info","date","Date","completed","tarihSlice","name","reducers","setInitial","state","setTarihteBugun","action","payload","setIlgiliTarih","setDataFailed","setTarihId","find","item","actions","getTarihteBugun","dispatch","get","then","res","data","catch","err","getTarihtekiBilgiler","tarihBilgileriDelete","token","localStorage","getItem","delete","headers","tarihBilgileriUpdate","put","response","setTarihteBugunToDatabase","post","stateTarihte","tarih","stateIlgiliTarih","stateTarihItem","stateCompleted","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../app/store';\nimport axios from 'axios';\n\ninterface TarihDatas {\n  id:string;\n  user:string;\n  title:string;\n  info:string;\n  date:Date;\n}\n\ninterface TarihState {\n  errors:{};\n  tarihteBugun: Array<TarihDatas>;\n  ilgiliTarihteki: Array<TarihDatas>;\n  tarihItem: TarihDatas | undefined;\n  completed:boolean;\n}\n\nconst initialState : TarihState = {\n  errors:{},\n  tarihteBugun:[],\n  ilgiliTarihteki:[],\n  tarihItem:{id:'', user:'', title:'', info:'', date: new Date()},\n  completed: false\n}\n\nexport const tarihSlice = createSlice({\n  name: 'tarih',\n  initialState,\n  reducers: {\n    setInitial: (state) => {\n      state.completed = false;\n      state.tarihItem = {id:'', user:'', title:'', info:'', date: new Date()};\n    },\n    setTarihteBugun: (state, action: PayloadAction<Array<TarihDatas>>) => {\n      state.tarihteBugun = action.payload;\n      state.completed = true;\n    },\n    setIlgiliTarih: (state, action: PayloadAction<Array<TarihDatas>>) => {\n      state.ilgiliTarihteki = action.payload\n    },\n    setDataFailed: (state, action: PayloadAction<any>) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setTarihId: (state, action: PayloadAction<string>) => {\n      state.tarihItem = state.ilgiliTarihteki.find(item => item.id === action.payload)\n    },\n    \n  },\n});\n\nexport const { setDataFailed, setTarihteBugun, setIlgiliTarih, setTarihId } = tarihSlice.actions;\n\n\nexport const getTarihteBugun = (): AppThunk => dispatch => {\n  axios.get(`http://localhost:5000/api/tarih/tarihte`)\n  .then(res => {\n      dispatch(setTarihteBugun(res.data))\n  })\n  .catch(err =>{\n      dispatch(setDataFailed(err))\n  })\n};\n\nexport const getTarihtekiBilgiler = (date: Date): AppThunk => dispatch => {\n  axios.get(`http://localhost:5000/api/tarih/tarihindeki?date=${date}`)\n  .then(res => {\n      dispatch(setIlgiliTarih(res.data))\n  })\n  .catch(err =>{\n      dispatch(setDataFailed(err))\n  })\n};\n\nexport const tarihBilgileriDelete = (id: string, date: Date): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/tarih/tarihdelete/${id}`, \n  {headers: {\"Authorization\": `Bearer ${token}`}})\n  .then(res => {\n      dispatch(getTarihtekiBilgiler(date))\n  })\n  .catch(err =>{\n      dispatch(setDataFailed(err))\n  })\n};\n\nexport const tarihBilgileriUpdate = (id: string, data: TarihDatas, date: Date ): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/tarih/tarihupdate/${id}`, data, \n  {headers: {\"Authorization\": `Bearer ${token}`}})\n  .then(res => {\n      dispatch(getTarihtekiBilgiler(date))\n  })\n  .catch(err =>{\n      dispatch(setDataFailed(err.response.data))\n  })\n};\n\nexport const setTarihteBugunToDatabase = (data: TarihDatas): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post('http://localhost:5000/api/tarih/tarihtebugun', data,\n  {headers: {\"Authorization\": `Bearer ${token}`}})\n  .then(res => {\n      dispatch(getTarihteBugun())\n  })\n  .catch(err =>{\n      dispatch(setDataFailed(err.response.data))\n  })\n};\n\nexport const stateTarihte = (state: RootState) => state.tarih.tarihteBugun;\nexport const stateIlgiliTarih = (state: RootState) => state.tarih.ilgiliTarihteki;\nexport const stateTarihItem = (state: RootState) => state.tarih.tarihItem;\nexport const stateCompleted = (state: RootState) => state.tarih.completed;\n\nexport default tarihSlice.reducer;"]},"metadata":{},"sourceType":"module"}