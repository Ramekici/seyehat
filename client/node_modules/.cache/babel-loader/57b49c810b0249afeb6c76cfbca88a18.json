{"ast":null,"code":"var _jsxFileName = \"/Users/ramazanekici/new-app/client/src/components/admin/kategoriler/KategoriGir.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAnaKategorilerToDatabase, stateEl, updateKategoriler, stateId, stateCompleted } from '../../../features/veriler/kategorilerSlice';\nimport InputText from '../inputUI/InputText';\nimport Kategoriler from './Kategoriler';\nimport AltKategoriler from './AltKategoriler';\nimport Heading from '../inputUI/Heading';\nimport Button from '../inputUI/Button';\nexport default function KategoriGir() {\n  const dispatch = useDispatch();\n  const completed = useSelector(stateCompleted);\n  const elemanId = useSelector(stateId);\n  const eleman = useSelector(stateEl);\n  const [veri, setVeri] = useState({\n    category: '',\n    link: ''\n  });\n  const {\n    category,\n    link\n  } = veri;\n\n  const onHandleVeri = name => event => {\n    setVeri({ ...veri,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    let payload = {\n      _id: '',\n      user: '',\n      category,\n      link,\n      openPos: false,\n      missions: []\n    };\n\n    if (elemanId !== '') {\n      payload = {\n        _id: eleman._id,\n        user: eleman.user,\n        category,\n        link,\n        openPos: false,\n        missions: []\n      };\n      dispatch(updateKategoriler(elemanId, payload));\n    } else {\n      dispatch(setAnaKategorilerToDatabase(payload));\n    }\n  };\n\n  useEffect(() => {\n    if (eleman) {\n      setVeri({\n        category: eleman.category,\n        link: eleman.link\n      });\n    } else if (completed) {\n      setVeri({\n        category: '',\n        link: ''\n      });\n    }\n  }, [eleman, completed]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      marginLeft: \"-10px\",\n      marginRight: \"-10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"pb-2\",\n    style: {\n      borderBottom: \"2px solid darkgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    text: \"Yeni Kategori Giri\\u015Fi/G\\xFCncelleme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    col: \"col\",\n    id: \"category\",\n    onChangeHandler: onHandleVeri(\"category\"),\n    val: category,\n    label: \"Kategori\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InputText, {\n    col: \"col\",\n    id: \"link\",\n    onChangeHandler: onHandleVeri(\"link\"),\n    val: link,\n    label: \"Link\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    text: elemanId !== '' ? 'Güncelle' : 'Kaydet',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Kategoriler, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AltKategoriler, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/components/admin/kategoriler/KategoriGir.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","setAnaKategorilerToDatabase","stateEl","updateKategoriler","stateId","stateCompleted","InputText","Kategoriler","AltKategoriler","Heading","Button","KategoriGir","dispatch","completed","elemanId","eleman","veri","setVeri","category","link","onHandleVeri","name","event","target","value","onSubmitHandler","e","preventDefault","payload","_id","user","openPos","missions","marginLeft","marginRight","borderBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,2BAAT,EAAsCC,OAAtC,EACIC,iBADJ,EACuBC,OADvB,EAEIC,cAFJ,QAE0B,4CAF1B;AAKA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,eAAe,SAASC,WAAT,GAAuB;AAElC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,SAAS,GAAGb,WAAW,CAACK,cAAD,CAA7B;AACA,QAAMS,QAAQ,GAAGd,WAAW,CAACI,OAAD,CAA5B;AACA,QAAMW,MAAM,GAAIf,WAAW,CAACE,OAAD,CAA3B;AAEA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC;AAACqB,IAAAA,QAAQ,EAAC,EAAV;AAAcC,IAAAA,IAAI,EAAC;AAAnB,GAAD,CAAhC;AAEA,QAAM;AAACD,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAmBH,IAAzB;;AAEA,QAAMI,YAAY,GAAIC,IAAD,IAAkBC,KAAD,IAAe;AACjDL,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACK,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAA/B,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIC,CAAD,IAAW;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,OAAO,GAAG;AAAEC,MAAAA,GAAG,EAAC,EAAN;AAAUC,MAAAA,IAAI,EAAC,EAAf;AAAmBZ,MAAAA,QAAnB;AAA6BC,MAAAA,IAA7B;AAAmCY,MAAAA,OAAO,EAAE,KAA5C;AAAmDC,MAAAA,QAAQ,EAAC;AAA5D,KAAd;;AACA,QAAGlB,QAAQ,KAAK,EAAhB,EAAmB;AACfc,MAAAA,OAAO,GAAE;AAAEC,QAAAA,GAAG,EAACd,MAAM,CAACc,GAAb;AAAkBC,QAAAA,IAAI,EAACf,MAAM,CAACe,IAA9B;AAAoCZ,QAAAA,QAApC;AAA8CC,QAAAA,IAA9C;AAAoDY,QAAAA,OAAO,EAAE,KAA7D;AAAoEC,QAAAA,QAAQ,EAAC;AAA7E,OAAT;AACApB,MAAAA,QAAQ,CAACT,iBAAiB,CAACW,QAAD,EAAWc,OAAX,CAAlB,CAAR;AACH,KAHD,MAGO;AACJhB,MAAAA,QAAQ,CAACX,2BAA2B,CAAE2B,OAAF,CAA5B,CAAR;AACF;AACJ,GATD;;AAWA9B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGiB,MAAH,EAAW;AACRE,MAAAA,OAAO,CAAC;AAAEC,QAAAA,QAAQ,EAAGH,MAAM,CAACG,QAApB;AAA8BC,QAAAA,IAAI,EAAGJ,MAAM,CAACI;AAA5C,OAAD,CAAP;AACF,KAFD,MAEO,IAAGN,SAAH,EAAc;AACjBI,MAAAA,OAAO,CAAC;AAAEC,QAAAA,QAAQ,EAAC,EAAX;AAAeC,QAAAA,IAAI,EAAC;AAApB,OAAD,CAAP;AACH;AACJ,GANQ,EAMN,CAACJ,MAAD,EAASF,SAAT,CANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACoB,MAAAA,UAAU,EAAC,OAAZ;AAAqBC,MAAAA,WAAW,EAAC;AAAjC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAC;AAAd,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,yCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,QAAQ,EAAEV,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,GAAG,EAAC,KADR;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,eAAe,EAAEL,YAAY,CAAC,UAAD,CAHjC;AAII,IAAA,GAAG,EAAEF,QAJT;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,IAAI,EAAC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,SAAD;AACI,IAAA,GAAG,EAAC,KADR;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,eAAe,EAAEE,YAAY,CAAC,MAAD,CAHjC;AAII,IAAA,GAAG,EAAED,IAJT;AAKI,IAAA,KAAK,EAAC,MALV;AAMI,IAAA,IAAI,EAAC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADR,eAkBQ,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEL,QAAQ,KAAK,EAAb,GAAkB,UAAlB,GAA+B,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBR,CAFJ,CADJ,eAwBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,eAyBI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADJ;AA+BH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAnaKategorilerToDatabase, stateEl, \n    updateKategoriler, stateId, \n    stateCompleted } from '../../../features/veriler/kategorilerSlice';\n\n\nimport InputText from '../inputUI/InputText';\nimport Kategoriler from './Kategoriler';\nimport AltKategoriler from './AltKategoriler';\nimport Heading from '../inputUI/Heading';\nimport Button from '../inputUI/Button';\n\n\nexport default function KategoriGir() {\n\n    const dispatch = useDispatch();\n    const completed = useSelector(stateCompleted);\n    const elemanId = useSelector(stateId);\n    const eleman =  useSelector(stateEl);\n\n    const [veri, setVeri] = useState({category:'', link:''})\n\n    const {category, link} = veri;\n\n    const onHandleVeri = (name:string) => (event:any) => {\n        setVeri({...veri, [name]: event.target.value})\n    }\n\n    const onSubmitHandler = (e:any) => {\n        e.preventDefault();\n        let payload = { _id:'', user:'', category, link, openPos: false, missions:[]}\n        if(elemanId !== ''){\n            payload ={ _id:eleman._id, user:eleman.user, category, link, openPos: false, missions:[]}\n            dispatch(updateKategoriler(elemanId, payload))\n        } else {\n           dispatch(setAnaKategorilerToDatabase( payload)); \n        }   \n    }\n\n    useEffect(() => {\n        if(eleman) {\n           setVeri({ category : eleman.category, link : eleman.link}) \n        } else if(completed) {\n            setVeri({ category:'', link:''})\n        }\n    }, [eleman, completed])\n\n    return (\n        <div className=\"container\" style={{marginLeft:\"-10px\", marginRight:\"-10px\"}}>\n            <section className=\"pb-2\" style={{borderBottom:\"2px solid darkgray\"}}> \n                <Heading text=\"Yeni Kategori Girişi/Güncelleme\"/>\n                <form onSubmit={onSubmitHandler}>\n                        <div className=\"row\">\n                            <InputText\n                                col=\"col\"\n                                id=\"category\"\n                                onChangeHandler={onHandleVeri(\"category\")} \n                                val={category} \n                                label=\"Kategori\"\n                                type=\"text\"\n                                />\n                            <InputText\n                                col=\"col\"\n                                id=\"link\"\n                                onChangeHandler={onHandleVeri(\"link\")} \n                                val={link} \n                                label=\"Link\"\n                                type=\"text\"/>\n                        </div>\n                        <Button text={elemanId !== '' ? 'Güncelle' : 'Kaydet'} />\n                </form>\n            </section>\n            <Kategoriler/>\n            <AltKategoriler/>\n        </div>\n       \n        \n    )\n}\n\n                          \n\n"]},"metadata":{},"sourceType":"module"}