{"ast":null,"code":"var _jsxFileName = \"/Users/ramazanekici/new-app/client/src/components/components/anasayfa/KategoriAnasayfa.js\";\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getKategoriler, stateKategoriler } from '../../../features/veriler/kategorilerSlice';\nimport { verilerStates, stateTarih, getVeriler } from '../../../features/veriler/verilerSlice';\nimport Spinner from '../../UI/Spinner';\nexport default function KategoriAnasayfa() {\n  const dispatch = useDispatch();\n  const veriData = useSelector(verilerStates);\n  const tarih = useSelector(stateTarih);\n  const date = moment(tarih).format(\"Do MMMM YYYY\");\n  useEffect(() => {\n    return dispatch(getKategoriler());\n  }, [dispatch]);\n  useEffect(() => {\n    const date = new Date();\n    dispatch(getVeriler(date));\n  }, []);\n  const kategoriDatas = useSelector(stateKategoriler);\n  const [openState, setOpenState] = useState([]);\n  useEffect(() => {\n    kategoriDatas.map(item => {\n      return setOpenState({ ...openState,\n        [item._id]: item.openPos\n      });\n    });\n  }, [kategoriDatas]);\n  const { ...ids\n  } = openState;\n\n  const changePos = id => {\n    if (ids[id]) {\n      setOpenState({ ...openState,\n        [id]: false\n      });\n    } else {\n      setOpenState({ ...openState,\n        [id]: true\n      });\n    }\n  };\n\n  return kategoriDatas ? kategoriDatas.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group\",\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group-item list-group-item-action\",\n      style: {\n        backgroundColor: \"#ddc5c5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, item.category, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-info mx-5\",\n      onClick: () => {\n        changePos(item._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: ids[item._id] ? \"fa fa-caret-up\" : \"fa fa-caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }))), item.missions.length > 0 && ids[item._id] ? /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      style: {\n        listStyle: \"none\",\n        float: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, item.missions.map(el => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }\n    }, \" \", el, \" : \")))) : null));\n  }) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }\n  });\n}","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/components/components/anasayfa/KategoriAnasayfa.js"],"names":["React","useEffect","useState","moment","useDispatch","useSelector","getKategoriler","stateKategoriler","verilerStates","stateTarih","getVeriler","Spinner","KategoriAnasayfa","dispatch","veriData","tarih","date","format","Date","kategoriDatas","openState","setOpenState","map","item","_id","openPos","ids","changePos","id","backgroundColor","category","float","missions","length","listStyle","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getKategoriler, stateKategoriler } from '../../../features/veriler/kategorilerSlice';\nimport {verilerStates, stateTarih, getVeriler} from '../../../features/veriler/verilerSlice';\nimport Spinner from '../../UI/Spinner';\n\nexport default function KategoriAnasayfa() {\n\n    const dispatch = useDispatch();\n    const veriData = useSelector(verilerStates);\n    const tarih = useSelector(stateTarih);\n    const date = moment(tarih).format(\"Do MMMM YYYY\");\n\n    useEffect(() => {\n        return dispatch(getKategoriler());\n    }, [dispatch]);\n\n    useEffect(()=>{\n        const date = new Date();\n        dispatch(getVeriler(date))\n    },[])\n    \n    \n    const kategoriDatas = useSelector(stateKategoriler);\n    const [openState, setOpenState] = useState([]);\n\n    useEffect(()=>{\n        kategoriDatas.map(item =>{\n            return setOpenState({\n                ...openState, [item._id]: item.openPos\n            })\n        });    \n    },[kategoriDatas]);\n\n    const {...ids} = openState;\n\n\n    const changePos = (id) => {\n        if(ids[id]) {\n            setOpenState({...openState, [id]: false})\n        } else {\n            setOpenState({...openState, [id]: true})\n        }\n    }\n\n    return (kategoriDatas ? \n        kategoriDatas.map(item => {\n            \n            return(\n                    <div className=\"list-group\" key = {item._id}>\n                        <div className=\"list-group-item list-group-item-action\" \n                            style={{backgroundColor: \"#ddc5c5\"}}>\n                            {item.category}\n                            <span style={{float:\"right\"}}>\n                                <button className=\"btn btn-sm btn-info mx-5\"\n                                    onClick={()=> { changePos(item._id)}}> \n                                    <i className= {ids[item._id] ? \"fa fa-caret-up\" : \"fa fa-caret-down\"} ></i>  \n                                </button>\n                            </span>\n                            {item.missions.length > 0 && ids[item._id]  ?\n                            <ul className=\"list-group\" style={{listStyle:\"none\", float:\"none\"}}>\n                                { item.missions.map(el => \n                                    <li className=\"list-item\"> \n                                        <span> {el} : </span> \n                                    </li>\n                                )}\n    \n                            </ul> : null}\n                        </div>\n                    </div>\n            ) \n        }) : <Spinner/>\n        \n            \n    )\n}\n"]},"metadata":{},"sourceType":"module"}