{"ast":null,"code":"import axios from 'axios';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { setModalClose } from '../modal/modalSlice';\nimport { BACK_SERVER_URL } from '../Config';\nconst eleman = {\n  _id: '',\n  user: '',\n  category: '',\n  openPos: false,\n  link: '',\n  missions: []\n};\nconst initialState = {\n  kategoriler: [],\n  missions: [],\n  missionsAlt: [],\n  id: '',\n  altId: '',\n  mission: '',\n  el: eleman,\n  completed: false,\n  errors: {\n    catagor: ''\n  }\n};\nexport const kategorilerSlice = createSlice({\n  name: 'kategoriler',\n  initialState,\n  reducers: {\n    setKategoriler: (state, action) => {\n      state.kategoriler = action.payload;\n    },\n    setMissions: (state, action) => {\n      const eleman = state.kategoriler.find(item => item.category === action.payload);\n\n      if (eleman) {\n        state.missions = eleman.missions;\n      }\n    },\n    setMissionsAlt: (state, action) => {\n      const eleman = state.kategoriler.find(item => item.category === action.payload);\n\n      if (eleman) {\n        state.missionsAlt = eleman.missions;\n      }\n    },\n    setDataFail: (state, action) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setId: (state, action) => {\n      state.id = action.payload;\n      state.el = state.kategoriler.find(item => item._id === action.payload);\n      state.completed = false;\n    },\n    setAltId: (state, action) => {\n      state.id = action.payload.id;\n      state.altId = action.payload.altId;\n      state.completed = false; //const eleman = state.kategoriler.find(item => item.id === action.payload.id)\n      //state.mission =  eleman.missions[action.payload.altId]; \n    },\n    setCompleted: state => {\n      state.id = '';\n      state.el = {\n        id: '',\n        user: '',\n        category: '',\n        openPos: false,\n        link: '',\n        missions: []\n      };\n      state.mission = '';\n      state.altId = '';\n      state.completed = true;\n    }\n  }\n});\nexport const {\n  setDataFail,\n  setKategoriler,\n  setId,\n  setAltId,\n  setCompleted,\n  setMissions,\n  setMissionsAlt\n} = kategorilerSlice.actions;\nexport const getKategoriler = () => dispatch => {\n  axios.get(`${BACK_SERVER_URL}:5000/api/category`).then(res => {\n    dispatch(setKategoriler(res.data.kategoriler));\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const setAnaKategorilerToDatabase = data => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`${BACK_SERVER_URL}:5000/api/category/create`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n  }).catch(err => {\n    dispatch(setDataFail(err.response.data));\n  });\n};\nexport const deleteKategorilerFromDatabase = id => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`${BACK_SERVER_URL}/api/category/delete/${id}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const setAltKategorilerToDatabase = (id, data) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`${BACK_SERVER_URL}/api/category/mission/create/${id}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n    dispatch(setModalClose());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const deleteAltKategorilerFromDatabase = (id, alt) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`${BACK_SERVER_URL}/api/category/mission/delete/${id}/${alt}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const updateAltKategoriler = (id, alt, data) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`${BACK_SERVER_URL}/api/category/mission/update/${id}/${alt}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n    dispatch(setModalClose());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const updateKategoriler = (id, data) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`${BACK_SERVER_URL}/api/category/update/${id}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n  }).catch(err => {\n    dispatch(setDataFail(err.response.data));\n  });\n};\nexport const stateKategoriler = state => state.kategoriler.kategoriler;\nexport const stateId = state => state.kategoriler.id;\nexport const stateEl = state => state.kategoriler.el;\nexport const stateMissionId = state => state.kategoriler.altId;\nexport const stateMission = state => state.kategoriler.mission;\nexport const stateCompleted = state => state.kategoriler.completed;\nexport const stateCategory = state => state.kategoriler;\nexport default kategorilerSlice.reducer;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/features/veriler/kategorilerSlice.ts"],"names":["axios","createSlice","setModalClose","BACK_SERVER_URL","eleman","_id","user","category","openPos","link","missions","initialState","kategoriler","missionsAlt","id","altId","mission","el","completed","errors","catagor","kategorilerSlice","name","reducers","setKategoriler","state","action","payload","setMissions","find","item","setMissionsAlt","setDataFail","setId","setAltId","setCompleted","actions","getKategoriler","dispatch","get","then","res","data","catch","err","setAnaKategorilerToDatabase","token","localStorage","getItem","post","headers","response","deleteKategorilerFromDatabase","delete","setAltKategorilerToDatabase","deleteAltKategorilerFromDatabase","alt","updateAltKategoriler","put","updateKategoriler","stateKategoriler","stateId","stateEl","stateMissionId","stateMission","stateCompleted","stateCategory","reducer"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../app/store';\nimport { setModalClose } from '../modal/modalSlice';\nimport { Kategori, KatogoriState, CategoryErrors, MissionAlt } from '../interfaces/categoryInterfaces';\nimport { BACK_SERVER_URL } from '../Config';\n\nconst eleman = {_id:'', user:'', category:'', openPos:false, link:'', missions:[]};\n\nconst initialState: KatogoriState = {\n    kategoriler:[],\n    missions:[],\n    missionsAlt:[],\n    id: '',\n    altId: '',\n    mission: '',\n    el:eleman,\n    completed: false,\n    errors:{catagor: ''}\n}\n\nexport const kategorilerSlice = createSlice({\n  name: 'kategoriler',\n  initialState,\n  reducers: {\n    setKategoriler: (state, action: PayloadAction<Kategori[]>) => {\n      state.kategoriler = action.payload\n    },\n    setMissions: (state, action: PayloadAction<string>) => {\n      const eleman = state.kategoriler.find(item => item.category === action.payload);\n      if(eleman){\n        state.missions = eleman.missions;\n      }\n    },\n    setMissionsAlt: (state, action: PayloadAction<string>) => {\n      const eleman = state.kategoriler.find(item => item.category === action.payload);\n      if(eleman){\n        state.missionsAlt = eleman.missions;\n      }\n    },\n    setDataFail: (state, action: PayloadAction<CategoryErrors|any>) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setId:(state, action: PayloadAction<string>) => {\n      state.id = action.payload;\n      state.el = state.kategoriler.find(item => item._id === action.payload)\n      state.completed = false\n    },\n    setAltId:(state, action: PayloadAction<any>) => {\n      state.id = action.payload.id;\n      state.altId = action.payload.altId;\n      state.completed = false;\n      //const eleman = state.kategoriler.find(item => item.id === action.payload.id)\n      //state.mission =  eleman.missions[action.payload.altId]; \n    },\n    setCompleted:(state) => {\n      state.id = '';\n      state.el = {id:'', user:'', category:'', openPos:false, link:'', missions:[]};\n      state.mission = '';\n      state.altId = '';\n      state.completed = true;\n    }\n\n  },\n});\n\nexport const { setDataFail, setKategoriler, setId, setAltId, setCompleted, setMissions, setMissionsAlt} = kategorilerSlice.actions;\n\n\nexport const getKategoriler = (): AppThunk => dispatch => {\n  axios.get(`${BACK_SERVER_URL}:5000/api/category`)\n  .then(res => {\n      dispatch(setKategoriler(res.data.kategoriler))\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\nexport const setAnaKategorilerToDatabase = (data: Kategori): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`${BACK_SERVER_URL}:5000/api/category/create`, \n  data, {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler())\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err.response.data))\n  })\n};\n\nexport const deleteKategorilerFromDatabase = (id: string): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`${BACK_SERVER_URL}/api/category/delete/${id}`, \n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler())\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\nexport const setAltKategorilerToDatabase = (id: string, data:MissionAlt): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`${BACK_SERVER_URL}/api/category/mission/create/${id}`, data, \n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler());\n      dispatch(setCompleted());\n      dispatch(setModalClose());\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\n\n\n\nexport const deleteAltKategorilerFromDatabase = (id:string, alt:string): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`${BACK_SERVER_URL}/api/category/mission/delete/${id}/${alt}`, \n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler())\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\n\n\nexport const updateAltKategoriler = (id:string, alt:string, data:MissionAlt): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`${BACK_SERVER_URL}/api/category/mission/update/${id}/${alt}`, data,\n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n    dispatch(setModalClose());\n  })\n  .catch(err =>{\n    dispatch(setDataFail(err))\n  })\n};\n\nexport const updateKategoriler = (id:string, data:Kategori):AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`${BACK_SERVER_URL}/api/category/update/${id}`, data,\n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n  })\n  .catch(err =>{\n    dispatch(setDataFail(err.response.data))\n  })\n};\n\n\n\nexport const stateKategoriler = (state: RootState) => state.kategoriler.kategoriler;\nexport const stateId = (state: RootState) => state.kategoriler.id;\nexport const stateEl = (state: RootState)=> state.kategoriler.el;\nexport const stateMissionId = (state: RootState) => state.kategoriler.altId;\nexport const stateMission = (state: RootState) => state.kategoriler.mission;\nexport const stateCompleted = (state: RootState) => state.kategoriler.completed;\n\n\nexport const stateCategory =(state: RootState) => state.kategoriler;\n\nexport default kategorilerSlice.reducer;"]},"metadata":{},"sourceType":"module"}