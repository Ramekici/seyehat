{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { setModalClose } from '../modal/modalSlice';\nimport axios from 'axios';\nconst initialState = {\n  kategoriler: [],\n  id: '',\n  altId: '',\n  mission: '',\n  el: {\n    id: '',\n    user: '',\n    category: '',\n    openPos: false,\n    link: '',\n    missions: []\n  },\n  completed: false,\n  errors: {}\n};\nexport const kategorilerSlice = createSlice({\n  name: 'kategoriler',\n  initialState,\n  reducers: {\n    setKategoriler: (state, action) => {\n      state.kategoriler = action.payload;\n    },\n    setDataFail: (state, action) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setId: (state, action) => {\n      state.id = action.payload;\n      state.el = state.kategoriler.find(item => item.id === action.payload);\n      state.completed = false;\n    },\n    setAltId: (state, action) => {\n      state.id = action.payload.id;\n      state.altId = action.payload.altId;\n      state.completed = false; //const eleman = state.kategoriler.find(item => item.id === action.payload.id)\n      //state.mission =  eleman.missions[action.payload.altId]; \n    },\n    setCompleted: state => {\n      state.id = '';\n      state.el = {\n        id: '',\n        user: '',\n        category: '',\n        openPos: false,\n        link: '',\n        missions: []\n      };\n      state.mission = '';\n      state.altId = '';\n      state.completed = true;\n    }\n  }\n});\nexport const {\n  setDataFail,\n  setKategoriler,\n  setId,\n  setAltId,\n  setCompleted\n} = kategorilerSlice.actions;\nexport const getKategoriler = () => dispatch => {\n  axios.get(`http://localhost:5000/api/category`).then(res => {\n    dispatch(setKategoriler(res.data.kategoriler));\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const setAnaKategorilerToDatabase = data => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`http://localhost:5000/api/category/create`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n  }).catch(err => {\n    dispatch(setDataFail(err.response.data));\n  });\n};\nexport const deleteKategorilerFromDatabase = id => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/category/delete/${id}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const setAltKategorilerToDatabase = (id, data) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`http://localhost:5000/api/category/mission/create/${id}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n    dispatch(setModalClose());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const deleteAltKategorilerFromDatabase = (id, alt) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/category/mission/delete/${id}/${alt}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const updateAltKategoriler = (id, alt, data) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/category/mission/update/${id}/${alt}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n    dispatch(setModalClose());\n  }).catch(err => {\n    dispatch(setDataFail(err));\n  });\n};\nexport const updateKategoriler = (id, data) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/category/update/${id}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n  }).catch(err => {\n    dispatch(setDataFail(err.response.data));\n  });\n};\nexport const stateKategoriler = state => state.kategoriler.kategoriler;\nexport const stateId = state => state.kategoriler.id;\nexport const stateEl = state => state.kategoriler.el;\nexport const stateMissionId = state => state.kategoriler.altId;\nexport const stateMission = state => state.kategoriler.mission;\nexport const stateCompleted = state => state.kategoriler.completed;\nexport default kategorilerSlice.reducer;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/features/veriler/kategorilerSlice.ts"],"names":["createSlice","setModalClose","axios","initialState","kategoriler","id","altId","mission","el","user","category","openPos","link","missions","completed","errors","kategorilerSlice","name","reducers","setKategoriler","state","action","payload","setDataFail","setId","find","item","setAltId","setCompleted","actions","getKategoriler","dispatch","get","then","res","data","catch","err","setAnaKategorilerToDatabase","token","localStorage","getItem","post","headers","response","deleteKategorilerFromDatabase","delete","setAltKategorilerToDatabase","deleteAltKategorilerFromDatabase","alt","updateAltKategoriler","put","updateKategoriler","stateKategoriler","stateId","stateEl","stateMissionId","stateMission","stateCompleted","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../app/store';\nimport { setModalClose } from '../modal/modalSlice';\nimport axios from 'axios';\n\ninterface Kategori {\n  id: string;\n  user: string;\n  category: string;\n  openPos: boolean;\n  link: string;\n  missions: Array<string>;\n}\n\ninterface KatogoriState {\n  kategoriler: Array<Kategori>;\n  id: string;\n  altId: string;\n  mission: string | undefined;\n  el: any;\n  completed: boolean;\n  errors:{}\n}\n\nconst initialState: KatogoriState = {\n    kategoriler:[],\n    id: '',\n    altId: '',\n    mission: '',\n    el:{id:'', user:'', category:'', openPos:false, link:'', missions:[]} ,\n    completed: false,\n    errors: {},\n}\n\nexport const kategorilerSlice = createSlice({\n  name: 'kategoriler',\n  initialState,\n  reducers: {\n    setKategoriler: (state, action: PayloadAction<Array<Kategori>>) => {\n      state.kategoriler = action.payload\n    },\n    setDataFail: (state, action: PayloadAction<any>) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setId:(state, action: PayloadAction<string>) => {\n      state.id = action.payload;\n      state.el = state.kategoriler.find(item => item.id === action.payload)\n      state.completed = false\n    },\n    setAltId:(state, action: PayloadAction<any>) => {\n      state.id = action.payload.id;\n      state.altId = action.payload.altId;\n      state.completed = false;\n      //const eleman = state.kategoriler.find(item => item.id === action.payload.id)\n      //state.mission =  eleman.missions[action.payload.altId]; \n    },\n    setCompleted:(state) => {\n      state.id = '';\n      state.el = {id:'', user:'', category:'', openPos:false, link:'', missions:[]};\n      state.mission = '';\n      state.altId = '';\n      state.completed = true;\n    }\n\n  },\n});\n\nexport const { setDataFail, setKategoriler, \n    setId, setAltId, setCompleted } = kategorilerSlice.actions;\n\n\nexport const getKategoriler = (): AppThunk => dispatch => {\n  axios.get(`http://localhost:5000/api/category`)\n  .then(res => {\n      dispatch(setKategoriler(res.data.kategoriler))\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\nexport const setAnaKategorilerToDatabase = (data: Kategori): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`http://localhost:5000/api/category/create`, \n  data, {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler())\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err.response.data))\n  })\n};\n\nexport const deleteKategorilerFromDatabase = (id: string): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/category/delete/${id}`, \n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler())\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\nexport const setAltKategorilerToDatabase = (id: string, data: Kategori): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`http://localhost:5000/api/category/mission/create/${id}`, data, \n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler());\n      dispatch(setCompleted());\n      dispatch(setModalClose());\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\n\n\n\nexport const deleteAltKategorilerFromDatabase = (id:string, alt:string): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/category/mission/delete/${id}/${alt}`, \n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n      dispatch(getKategoriler())\n  })\n  .catch(err =>{\n      dispatch(setDataFail(err))\n  })\n};\n\n\n\nexport const updateAltKategoriler = (id:string, alt:string, data:Kategori): AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/category/mission/update/${id}/${alt}`, data,\n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n    dispatch(setModalClose());\n  })\n  .catch(err =>{\n    dispatch(setDataFail(err))\n  })\n};\n\nexport const updateKategoriler = (id:string, data:Kategori):AppThunk => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/category/update/${id}`, data,\n  {headers: {\"Authorization\": `Bearer ${token}`}} )\n  .then(res => {\n    dispatch(getKategoriler());\n    dispatch(setCompleted());\n  })\n  .catch(err =>{\n    dispatch(setDataFail(err.response.data))\n  })\n};\n\n\n\nexport const stateKategoriler = (state: RootState) => state.kategoriler.kategoriler;\nexport const stateId = (state: RootState) => state.kategoriler.id;\nexport const stateEl = (state: RootState)=> state.kategoriler.el;\nexport const stateMissionId = (state: RootState) => state.kategoriler.altId;\nexport const stateMission = (state: RootState) => state.kategoriler.mission;\nexport const stateCompleted = (state: RootState) => state.kategoriler.completed;\n\nexport default kategorilerSlice.reducer;"]},"metadata":{},"sourceType":"module"}