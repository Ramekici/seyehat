{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  gazeteler: [],\n  specific: [],\n  updateEl: {\n    id: '',\n    user: '',\n    title: '',\n    description: '',\n    owner: '',\n    name: '',\n    date: new Date()\n  },\n  message: '',\n  completed: false,\n  errors: {}\n};\nexport const gazetelerSlice = createSlice({\n  name: 'gazeteler',\n  initialState,\n  reducers: {\n    setInitial: state => {\n      state.completed = false;\n      state.message = '';\n      state.errors = {};\n      state.updateEl = {\n        id: '',\n        user: '',\n        title: '',\n        description: '',\n        owner: '',\n        name: '',\n        date: new Date()\n      };\n    },\n    setGazeteler: (state, action) => {\n      state.gazeteler = action.payload;\n      state.completed = true;\n    },\n    setSpecificNews: (state, action) => {\n      state.specific = action.payload;\n      state.completed = true;\n    },\n    setDataFailed: (state, action) => {\n      state.errors = action.payload;\n      state.completed = false;\n    },\n    setUpdateEl: (state, action) => {\n      state.updateEl = state.specific.find(item => item.id === action.payload);\n    }\n  }\n});\nexport const {\n  setInitial,\n  setDataFailed,\n  setUpdateEl,\n  setGazeteler,\n  setSpecificNews\n} = gazetelerSlice.actions;\nexport const getGazeteler = date => dispatch => {\n  axios.get(`http://localhost:5000/api/gazeteler?date=${date}`).then(res => {\n    dispatch(setGazeteler(res.data));\n    dispatch(setSpecificNews(res.data));\n  }).catch(err => {\n    dispatch(setDataFailed(err));\n  });\n};\nexport const setGazetelerToDatabase = (data, date) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post('http://localhost:5000/api/gazeteler/create', data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getGazeteler(date));\n    dispatch(setInitial());\n  }).catch(err => {\n    dispatch(setDataFailed(err.response.data));\n  });\n};\nexport const deleteGazeteler = (id, date) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.delete(`http://localhost:5000/api/gazeteler/delete/${id}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getGazeteler(date));\n  }).catch(err => {\n    dispatch(setDataFailed(err));\n  });\n};\nexport const updateGazeteler = (id, data, date) => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.put(`http://localhost:5000/api/gazeteler/update/${id}`, data, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch(getGazeteler(date));\n    dispatch(setInitial());\n  }).catch(err => {\n    dispatch(setDataFailed(err.response.data));\n  });\n};\nexport const stateVeri = state => state.gazeteler.gazeteler;\nexport const stateUpdateEl = state => state.gazeteler.updateEl;\nexport const stateErrors = state => state.gazeteler.errors;\nexport const stateCompleted = state => state.gazeteler.completed;\nexport const stateSpecificNews = state => state.gazeteler.specific;\nexport default gazetelerSlice.reducer;","map":{"version":3,"sources":["/Users/ramazanekici/new-app/client/src/features/veriler/gazetelerSlice.ts"],"names":["createSlice","axios","initialState","gazeteler","specific","updateEl","id","user","title","description","owner","name","date","Date","message","completed","errors","gazetelerSlice","reducers","setInitial","state","setGazeteler","action","payload","setSpecificNews","setDataFailed","setUpdateEl","find","item","actions","getGazeteler","dispatch","get","then","res","data","catch","err","setGazetelerToDatabase","token","localStorage","getItem","post","headers","response","deleteGazeteler","delete","updateGazeteler","put","stateVeri","stateUpdateEl","stateErrors","stateCompleted","stateSpecificNews","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../app/store';\nimport axios from 'axios';\n\ninterface GazetelerDatas {\n  _id:string;\n  user:string;\n  title:string, \n  description:string,\n  owner:string,\n  name:string,\n  date:Date,\n}\n\ninterface GazetelerState {\n  gazeteler: Array<GazetelerDatas>,\n  specific: Array<GazetelerDatas>,\n  updateEl: GazetelerDatas | undefined,\n  message: string,\n  completed: boolean,\n  errors: any,\n}\n\nconst initialState: GazetelerState = {\n  gazeteler: [],\n  specific: [],\n  updateEl: {id:'', user:'', title:'', description:'', owner:'', name:'', date: new Date()},\n  message: '',\n  completed: false,\n  errors:{},\n};\n\nexport const gazetelerSlice= createSlice({\n    name: 'gazeteler',\n    initialState,\n    reducers: {\n      setInitial:(state) => {\n        state.completed = false;\n        state.message = '';\n        state.errors = {};\n        state.updateEl = {id:'', user:'', title:'', description:'', owner:'', name:'', date: new Date()};\n      },\n      setGazeteler:(state, action: PayloadAction<Array<GazetelerDatas>>) => {\n        state.gazeteler = action.payload;\n        state.completed = true;\n      },\n      setSpecificNews: (state, action: PayloadAction<Array<GazetelerDatas>>) => {\n        state.specific = action.payload;\n        state.completed = true;\n      },\n      setDataFailed: (state, action: PayloadAction<any>) => {\n        state.errors = action.payload;\n        state.completed = false;\n      },\n      setUpdateEl: (state, action: PayloadAction<string>) => {\n        state.updateEl = state.specific.find(item => item.id === action.payload);\n      },\n  \n    },\n  });\n  \n  export const { setInitial, setDataFailed, setUpdateEl, \n    setGazeteler, setSpecificNews } = gazetelerSlice.actions;\n  \n  export const getGazeteler = (date: Date): AppThunk => dispatch => {\n      axios.get(`http://localhost:5000/api/gazeteler?date=${date}`)\n      .then(res => {\n          dispatch(setGazeteler(res.data));\n          dispatch(setSpecificNews(res.data))\n      })\n      .catch(err =>{\n          dispatch(setDataFailed(err))\n      })\n  };\n  \n  \n  \n  export const setGazetelerToDatabase = (data: GazetelerDatas, date: Date): AppThunk => dispatch => {\n    const token = localStorage.getItem('token');\n    axios.post('http://localhost:5000/api/gazeteler/create', data,\n    {headers: {\"Authorization\": `Bearer ${token}`}})\n    .then(res => {\n      dispatch(getGazeteler(date));\n      dispatch(setInitial());\n    })\n    .catch(err =>{\n      dispatch(setDataFailed(err.response.data))\n    })\n  };\n\n  export const deleteGazeteler = (id: string, date: Date): AppThunk => dispatch => {\n    const token = localStorage.getItem('token');\n    axios.delete(`http://localhost:5000/api/gazeteler/delete/${id}`,\n    {headers: {\"Authorization\": `Bearer ${token}`}})\n    .then(res => {\n        dispatch(getGazeteler(date))\n    })\n    .catch(err =>{\n        dispatch(setDataFailed(err))\n    })\n  };\n  \n\n  export const updateGazeteler = (id:string, data:GazetelerDatas, date: Date):AppThunk => dispatch => {\n    const token = localStorage.getItem('token');\n    axios.put(`http://localhost:5000/api/gazeteler/update/${id}`, data,\n    {headers: {\"Authorization\": `Bearer ${token}`}})\n    .then(res => {\n        dispatch(getGazeteler(date))\n        dispatch(setInitial());\n    })\n    .catch(err =>{\n        dispatch(setDataFailed(err.response.data))\n    })\n  };\n\n\n  export const stateVeri = (state: RootState) => state.gazeteler.gazeteler;\n  export const stateUpdateEl = (state: RootState) => state.gazeteler.updateEl;\n  export const stateErrors = (state: RootState) => state.gazeteler.errors;\n  export const stateCompleted = (state: RootState) => state.gazeteler.completed;\n  export const stateSpecificNews = (state: RootState) => state.gazeteler.specific;\n\n  \n  export default gazetelerSlice.reducer;"]},"metadata":{},"sourceType":"module"}